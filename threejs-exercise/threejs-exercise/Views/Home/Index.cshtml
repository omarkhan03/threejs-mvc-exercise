@using threejs_exercise.Models;

@{
    ViewBag.Title = "Index";
}

<div class="text-center dflex flex-row" style="">
    @{
        var data = ViewBag.Message;
        data.x = Math.Round(data.x, 1);
        data.y = Math.Round(data.y, 1);
        data.z = Math.Round(data.z, 1);

    }

    <div class="incrementers">
        <a class="reset" asp-area="" asp-controller="Home"
           asp-action="Index">
            Reset
        </a>
        <a class="edit" style="" asp-area="" asp-controller="Home"
           asp-action="xIncr" asp-route-x="@data.x" asp-route-y="@data.y" asp-route-z="@data.z">
            Increment x
        </a>
        <a class="edit" style="" asp-area="" asp-controller="Home"
           asp-action="xDecr" asp-route-x="@data.x" asp-route-y="@data.y" asp-route-z="@data.z">
            Decrement x
        </a>

        <a class="edit" style="" asp-area="" asp-controller="Home"
           asp-action="yIncr" asp-route-x="@data.x" asp-route-y="@data.y" asp-route-z="@data.z">
            Increment y
        </a>
        <a class="edit" style="" asp-area="" asp-controller="Home"
           asp-action="yDecr" asp-route-x="@data.x" asp-route-y="@data.y" asp-route-z="@data.z">
            Decrement y
        </a>

        <a class="edit" style="" asp-area="" asp-controller="Home"
           asp-action="zIncr" asp-route-x="@data.x" asp-route-y="@data.y" asp-route-z="@data.z">
            Increment z
        </a>
        <a class="edit" style="" asp-area="" asp-controller="Home"
           asp-action="zDecr" asp-route-x="@data.x" asp-route-y="@data.y" asp-route-z="@data.z">
            Decrement z
        </a>
    </div>

    <div class="dims">
        <div>x: @data.x</div>
        <div>y: @data.y</div>
        <div>z: @data.x</div>
    </div>




    <script src="~/js/three.js"></script>
    <script>const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        const geometry = new THREE.BoxGeometry(@data.x, @data.y, @data.z);
        const material = new THREE.MeshBasicMaterial({ color: 0x20b2aa });
        const cube = new THREE.Mesh(geometry, material);
        scene.add(cube);

        const edges = new THREE.EdgesGeometry(geometry);
        const line = new THREE.LineSegments(edges, new THREE.LineBasicMaterial({ color: 0xffffff }));
        scene.add(line);

        camera.position.z = 5;

        function animate() {
            requestAnimationFrame(animate);
            cube.rotation.x += 0.01;
            cube.rotation.y += 0.01;
            line.rotation.x += 0.01;
            line.rotation.y += 0.01;
            renderer.render(scene, camera);
        }
        animate();</script>
</div>

